version: 2

jobs:
  build:
    environment:
      - MIX_ENV: "test"
    docker:
      # Use CircleCI specific images:
      # - provide `dockerize` used command below
      # - for more information see https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/elixir:1.7.1
      - image: circleci/postgres:10.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: magasin_test
          POSTGRES_PASSWORD: postgres
    working_directory: ~/repo
    steps:
      - checkout
      - run: cp config/test.secret.exs.ci config/test.secret.exs
      - run: mix do local.hex --force, local.rebar --force
      - restore_cache: # restore saved dependency cache
          keys:
            - v4-dep-cache-{{ checksum "mix.lock" }}
            - v4-dep-cache-{{ .Branch }}
            - v4-dep-cache
      - restore_cache:  # restores saved build cache
          keys:
            - v4-build-and-mix-cache-{{ .Branch }}
            - v4-build-and-mix-cache
      - run: mix do deps.get, compile --warnings-as-errors
      - save_cache: # save dependencies to cache
          key: v4-dep-cache-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache: # save dependencies to cache
          key: v4-dep-cache-{{ .Branch }}
          paths: "deps"
      - save_cache: # save dependencies to cache
          key: v4-dep-cache
          paths: "deps"
      - save_cache: # save build cache
          key: v4-build-and-mix-cache-{{ .Branch }}
          paths:
            - _build
            - ~/.mix
      - save_cache: # save build cache
          key: v4-build-and-mix-cache
          paths:
            - _build
            - ~/.mix
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: mix format --check-formatted
      - run: mix coveralls.circle --umbrella
      - run: mix credo --strict
      - run: mix project.seed
      - run: mix cmd --app magasin_web mix sobelow --compact --exit Low
      - run: sudo apt-get install -y rsync
      - run:
           command: |
              ./bin/project.init -a rock-roll -g civilcode/rock_and_roll -Y -Q -r .
              cd ../rock-roll-platform
              echo "use Mix.Config
              config :rock_roll, RockRoll.Repo,
                adapter: Ecto.Adapters.Postgres,
                database: \"magasin_test\",
                hostname: \"localhost\",
                username: \"postgres\",
                password: \"postgres\",
                pool: Ecto.Adapters.SQL.Sandbox" > config/test.secret.exs
              mix do deps.get, test
